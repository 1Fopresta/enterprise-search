#######################################################################################
#
# Kickstart install script for Searchdaimon ES v3 - Base on CentOS 6
#
#######################################################################################


# install a system
install

# Use text mode
text

# Use the Searchdaimon reposetory
url --url http://repo.searchdaimon.com/closed/CentOSRepository/centos/6.5/os/x86_64/

lang en_US.UTF-8
keyboard us
# Use dhcp on eth0
network --device eth0 --bootproto dhcp
#rootpw --iscrypted $1$oLdst5aW$N898WUKUqxpjDifpolfAP.
rootpw --iscrypted $1$oLghT5aW$fuB6XXlnLD1cotqHP93Yp/
firewall --enabled --ssh --http --port=443:tcp
selinux --disabled
authconfig --enableshadow --enablemd5
timezone Europe/Oslo
zerombr yes
firstboot --disabled
#aa ignoredisk --drives=sdb
reboot
bootloader --location=mbr
#autostep #for debugging
#interactive

%include /tmp/part-include

#clearpart --linux --initlabel
#part / --fstype ext3 --size=10000
#part /tmp --fstype ext3 --size=1024
#part /boithoData --fstype ext2 --size=100 --grow --noformat --onpart=LABEL=/boithoData


%packages
# bra eksempel p? pakke valg for liten instalasjon http://forums.fedoraforum.org/archive/index.php/t-151452.html
# skal ogs? finne et kikstart gui for ? velge pakker
# liste over grupper ligger p? http://www2.searchdaimon.com/closed/FedoraRepository/RHEL/5Server/Server/repodata/comps-rhel5-server-core.xml
@core
-mkinitrd
@base
-mlocate
-bluez-utils
-nfs-utils
#aa kernel-2.6.23.1
rootfiles
ethtool
bash
coreutils
device-mapper
binutils
yum-metadata-parser
ntp
yum-utils
httpd
man
samba
setup
grep
openssl
vim-minimal
sysvinit
php-mysql
traceroute
rpm
initscripts
samba-common
samba-client
#aa dhcpv6-client
#aa yum-updatesd
man-pages
tar
httpd-tools
wget
symlinks
sudo
mysql
mysql-server
grub
gzip
dhclient
openssh-clients
filesystem
crontabs
openssh
openssh-server
perl
php
php-cli
# trenger ikke denne n?r vi ikke kj?rer dhcp server p? eth0 (netport port 1)
#dhcp
ImageMagick.x86_64
nmap
aspell


%pre
#!/bin/bash
/bin/umount /dev/sdb

OLD_BOITHO_INST=0
BOITHODATA=""
PSLASH=""
PTMP=""
PSWAP=""

#######################################################################################
# I now read the commandline used to start the script. Only store sd* variabeles.
# The = is used as a delimiter for the var
#
# special thanks to Gabe for the commandline bit...http://www.gabesvirtualworld.com
# this sets $* to the boot line text
#######################################################################################

set -- `cat /proc/cmdline`

# now we simply loop through the elements of the string and if it starts with "sd"
# we eval it to set a variable
for x in $*; do 
	case $x in sd*) 
		eval $x
		
		# put it into a file for use in the %post section
		echo $x >> /tmp/ks_call-script.sh
		;; 
	esac; 
done


#######################################################################################
# Detectin old instalation, and seting up partitions
#######################################################################################
for device in `sed -ne "s/.* \([a-z]\+[0-9]\+\)$/\1/p" /proc/partitions` ; do
  label=`e2label /dev/$device 2> /dev/null`;
  disk=`echo $device|tr -d [0-9]`;
  if [[ $label == "/boithoData" ]]; then
    BOITHODATA=$device;
    OLD_BOITHO_INST=`expr $OLD_BOITHO_INST + 1`
  elif [[ $label == "/" ]]; then
    PSLASH=$device;
    OLD_BOITHO_INST=`expr $OLD_BOITHO_INST + 1`
  elif [[ $label == "/tmp" ]]; then
    PTMP=$device;
    OLD_BOITHO_INST=`expr $OLD_BOITHO_INST + 1`
  elif [[ "/dev/"$device == `fdisk -l /dev/$disk|awk '/swap/ { printf("%s\n", $1); }'` ]]; then
    PSWAP=$device;
    OLD_BOITHO_INST=`expr $OLD_BOITHO_INST + 1`
  fi
done

#if [ $OLD_BOITHO_INST == 4 ] || [ ${sdreset} == "true" ]; then
#  echo "Reinstalling SearchDaimon..."
#  echo "# Reinstalling SearchDaimon..." > /tmp/part-include
##  echo "clearpart --all" >> /tmp/part-include
#  echo "part / --fstype ext3 --onpart "$PSLASH >> /tmp/part-include
#  echo "part /tmp --fstype ext3 --onpart "$PTMP >> /tmp/part-include
#  echo "part swap --onpart "$PSWAP >> /tmp/part-include
#  #if we dont hawe spedial instructions, make /boithoData on defult drive
#  if [[ ${sddata} == "" ]]; then
#      echo "part /boithoData --fstype ext3 --noformat --onpart "$BOITHODATA >> /tmp/part-include
#  fi
#else
  echo "Installing SearchDaimon..."
  echo "# Installing SearchDaimon..." > /tmp/part-include
  echo "clearpart --all --drives sda" >> /tmp/part-include
  echo "part / --fstype ext3 --size=10000 --ondisk=sda" >> /tmp/part-include
  echo "part /tmp --fstype ext3 --size=1024 --ondisk=sda" >> /tmp/part-include
  echo "part swap --recommended" >> /tmp/part-include
  #if we dont hawe spedial instructions, make /boithoData on defult drive
  if [[ ${sddata} == "" ]]; then
      echo "part /boithoData --asprimary --fstype ext3 --size=100 --grow --ondisk=sda" >> /tmp/part-include
  fi

#fi
#

#######################################################################################

echo "# BOITHODATA: "$BOITHODATA >> /tmp/part-include
echo "# PSLASH: "$PSLASH >> /tmp/part-include
echo "# PTMP: "$PTMP >> /tmp/part-include
echo "# PSWAP: "$PSWAP >> /tmp/part-include
echo "# OLD_BOITHO_INST: "$OLD_BOITHO_INST >> /tmp/part-include

#######################################################################################
# making post instal script to handel custum sddata drive
#######################################################################################
if [[ ${sddata} != "" ]]; then

# Tel anaconda ignore the custom disk, so we can format it our self.
ignoredisk --drives=${sddata}


#make script for seting up /boithoData if we have a spec for sddata
cat << EOL >> /tmp/ks_sddata_setup.sh
#!/bin/sh
#
# script for seting up /boithoData if we have a spec for sddata
#
#formating whole driva as ext3 and naming it /boithoData
echo "Formating disk: " ${sddata}
/sbin/mkfs.ext3 -L /boithoData -m 1 -F /dev/${sddata}

echo "Making /boithoData folder"
mkdir /boithoData

#adding entry in fstab
echo "Seting up fstab"
echo "LABEL=/boithoData       /boithoData             ext3    defaults        1 2" >> /etc/fstab

#mounting it
echo "Mounting /boithoData"
mount /boithoData
EOL

#make script to resize the drive
cat << EOL >> /tmp/sddata_resize
#!/bin/sh
#
# chkconfig: 345 98 10
# description: This scripts resizes /dev/${sddata}
case "\$1" in
  start)
	resize2fs -p /dev/${sddata}
    ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start}" >&2
    exit 2
    ;;
esac

exit 0
EOL

fi
#######################################################################################



%post --nochroot
(

# copy the command line vars script into root's home dir
cp -v /tmp/ks_call-script.sh /mnt/sysimage/root/ks_call-script.sh

#copy the sddata setup script
cp -v /tmp/ks_sddata_setup.sh /mnt/sysimage/root/ks_sddata_setup.sh

#copy the sddata setup script
cp -v /tmp/sddata_resize /mnt/sysimage/root/sddata_resize

# if you are interested in anaconda's log, you can copy it at this point too
cp -v /tmp/anaconda.log /mnt/sysimage/root/anaconda.log #debug

) > /mnt/sysimage/root/kickstart-nochroot-post.log 2>&1


%post

(

# seting up boithoData (sddata) disk if spesifyed
if [ -f /root/ks_sddata_setup.sh ]; then
	chmod 755 /root/ks_sddata_setup.sh
	/root/ks_sddata_setup.sh
fi


# instal sddata_resize to run at boot
if [ -f /root/sddata_resize ]; then
	install -D -m 755  /root/sddata_resize /etc/init.d/sddata_resize
	chkconfig --add sddata_resize

	#testing to start it
	/etc/init.d/sddata_resize start
fi


# Get and run the install script
wget -O /tmp/install.sh http://www.searchdaimon.com/es/v3/install.sh
chmod 755 /tmp/install.sh
/tmp/install.sh

#####################################################################################################
# Setup login rules
#####################################################################################################
SSHDCONFIG=/etc/ssh/sshd_config

# Do not permit root to log directly in
egrep "^PermitRootLogin no$" $SSHDCONFIG > /dev/null  || echo "PermitRootLogin no" >> $SSHDCONFIG
# Do not allow password logins
egrep "^PasswordAuthentication yes$" $SSHDCONFIG >/dev/null && sed -i.bak -e 's/^PasswordAuthentication yes$/PasswordAuthentication no/' $SSHDCONFIG

/etc/init.d/sshd restart
#####################################################################################################

# Phonehome
yum -y install boitho-phonehome

yum clean all


) > /root/kickstart-post.log 2>&1
